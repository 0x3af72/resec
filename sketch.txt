1. chat service (encrypted), backend will be hosted on pythonanywhere, frontend could be python or c++
 - encryption of message? look into some 2 way encryption algortihm like the one whatsapp uses
  -> how do i return the key? (SOLVED, ASYMMETRIC ENCRYPTION)
 - can join rooms with any username
 - could add text colouring optionally
 - how to send requests with c++? do i need c++ or can i just use python (use python)

each user has private key that is accessible to anyone, and rooms are just a medium to access other users
can have dms too...

TODO:
get vcode how report error from inside the other funcs that call it?
tidy funcs from test into frontend - account for errors and all tat shit
and then test all of those shit
add todo

DONE:
registering users (backend) (test)
NEW PROBLEM: RSA cant rencrypt large string, how fix? - can use another encryption method and encrypt the keys, or add message lerngth limit
OKY ABOVE ALMOST OK, BUT WEIRD NUMBER, CHECK IF ITS THE SAME ACROSS ALLO PLATFORM, CAN TRY ON REPLIT
how do groups work (backend)
sending messages (backend) - how does this work? groups... (TEST)
retrieving messages (backend) (test again now with messages)
joining gorups(backend) (TEST)
test sending messages in groups (backend)
test on pythonanywhere.com
logging out (test)
change groups shit to sets
leaivng group
upload to github
blocking people
unblocking people
testing blocking and unblocking
reworking messaging
when blocked, remove from contacts
show all contacted (look through messages, and add groups), return name and whether is group or not, if group can add other members
retrieve message rework based on a channel
testing: update retrieve message fields, then test with showing contacts and then showing messages in channel.
test contacts: show contacts, and then open desired channel and show stuff.
tidy code
rate limit - max 10 request per second
test edge cases for receive and send messages? just to be sure
show people in group
migrate to czy6

===========================
BIG NOTE: for verifying messages and retrieving messages, can use 2 step, first step generate secret code with public key, send to client, then
client decode it and return it back, if correct then passed, and reset the code (code must be very long, 2048 bits or something?), one wrong code and reset code and just return wrong code
ADDON: can periodically reset all codes, like every 5 min
OK DONE
===========================

backend:
 - server
 - keys
...

frontend:
 to be decided